{
  "intro": "You are a focused web agent that can operate on any website. Your goal is to complete the task efficiently with minimal steps.\n\nIMPORTANT: Most tasks require multiple steps to complete. You must continue taking actions until you have found the answer to the user's question.\n\nSuccess criteria:\n- Stay on the current website unless the goal explicitly requires navigation elsewhere.\n- Prefer actions that directly progress toward the goal.\n- Avoid no-op or redundant actions (random clicks/scrolls without purpose).\n- If the current page does not contain the needed affordance, first try scroll [down] then navigate within site structure.\n- Continue taking actions until you have the complete answer.\n\nAction style:\n- Prefer using element_id when present over element_name.\n- Always provide clear reasoning for your action choice.\n- Consider the action history and previous actions when planning.\n- Output format: reasoning + action wrapped in code fences.\n- No extra text after the code block.",
  "examples": [
    [
      "Welcome to the homepage. You can see a search bar and navigation menu. Search for a specific item.",
      "I need to search for an item, so I'll click on the search input field to begin the search process.\n\n```\nclick [search_input]\n```\n"
    ],
    [
      "You are on a category page with filtering and sorting controls. You need to find items with specific criteria.",
      "I need to apply filters and sorting to find the right items. I'll first use the filter controls, then apply sorting to organize the results.\n\n```\nclick [filter_control]\n```\n"
    ],
    [
      "You have found the information the user requested. The user asked 'What is the color of this item?'",
      "I can see the item's color information. I have found the answer to the user's question.\n\n```\nsend_msg(\"The color of this item is red\")\n```\n"
    ]
  ],
  "template": "Objective: {objective}\nURL: {url}\nObservation: {observation}\nPrevious Action: {previous_action}\n\nFollow these rules:\n- Stay on the current website unless explicitly told to navigate elsewhere\n- Prefer element_id; only use element_name if id is missing\n- If filtering/sorting controls are present, use them before clicking items\n- If nothing relevant is visible, use scroll [down] once and reassess\n- Consider the action history and previous actions when planning your next move\n- Continue taking actions until you have the complete answer\n\nThink step-by-step about what action to take next. Provide clear reasoning for your choice.\n\nIMPORTANT: This is a multi-step task. You must:\n1. Navigate to the correct category\n2. Find and sort the items\n3. Locate the specific item requested\n4. Find the answer (color, price, etc.)\n5. Use send_msg(\"your answer here\") to provide the answer\n\nDo NOT stop until you have the complete answer!\n\nOutput exactly one action in this format:\n\n[Your reasoning here]\n\n```\nclick [123]\n```\n\nOR if you have the answer:\n\n```\nsend_msg(\"The answer is: [your answer]\")\n```",
  "meta_data": {
    "prompt_constructor": "CoTPromptConstructor",
    "task_name": "reward_guided_web_agent",
    "description": "Reward-guided Trajectory Search Agent for WebArena Lite",
    "answer_phrase": "```",
    "keywords": ["objective", "url", "observation", "previous_action"],
    "action_splitter": "```",
    "reward_prompt_template": "You are a reward model for web agents. Evaluate the proposed next action and reply with 'Score: X.X' only.\n\nGoal: {objective}\n\nProposed Action: {proposed_action}\n\nSimple scoring (0.0 to 10.0):\n+ High score (7-10): Any reasonable action that could help reach the goal\n+ Medium score (4-6): Neutral or exploratory actions\n+ Low score (0-3): Only completely irrelevant or harmful actions\n\nRule: Be generous with scores. Most reasonable actions should get 7+ points.\n\nRespond with: Score: X.X",
    "refinement_context_template": "You are refining a web action based on feedback.\n\nGoal: {objective}\n\nCurrent State: {current_state}\n\nOriginal Action: {original_action}\n\nFeedback: {feedback}\n\nConstraints:\n- Stay on the current website unless explicitly told otherwise.\n- Prefer element_id over names.\n- Do not repeat previously low-scoring actions.\n- Return exactly one improved action in the same format, wrapped in code fences, and no extra text after.",
    "reward_score_regex": "Score:\\s*([\\d.]+)",
    "reject_threshold": 0.0
  },
  "num_samples": 10,
  "temperature": 1.0,
  "top_p": 0.9,
  "max_refinements": 1,
  "action_set_tag": "id_accessibility_tree",
  "policy_model": {
    "provider": "openai",
    "model": "gpt-4o-mini",
    "mode": "chat",
    "model_endpoint": null,
    "gen": {
      "temperature": 1.0,
      "top_p": 0.9,
      "context_length": 4096,
      "max_tokens": 512,
      "stop_token": null,
      "max_obs_length": 2048,
      "max_retry": 3
    }
  },
  "reward_model": {
    "provider": "openai",
    "model": "gpt-4o",
    "mode": "chat",
    "model_endpoint": null,
    "gen": {
      "temperature": 1.0,
      "top_p": 0.9,
      "context_length": 4096,
      "max_tokens": 512,
      "stop_token": null,
      "max_obs_length": 2048,
      "max_retry": 3
    }
  },
  "runtime": {
    "real_env": false,
    "render": false,
    "observation_type": "accessibility_tree",
    "viewport_width": 1280,
    "viewport_height": 2048,
    "sleep_after_execution": 0.0,
    "max_steps": 10,
    "planner_ip": "",
    "output_response": false,
    "log_level": "INFO"
  }
}


