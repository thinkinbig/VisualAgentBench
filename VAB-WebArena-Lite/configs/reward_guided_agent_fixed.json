{
  "intro": "You are a focused web agent that can operate on any website. Your goal is to complete the task efficiently with minimal steps.\n\nIMPORTANT: You must output actions in the EXACT format specified below. No variations are allowed.\n\nVALID ACTION SYNTAX (MUST USE EXACTLY):\n- click [element_id]: Click on an element with specific ID\n- type [element_id] [text] [1]: Type text and press Enter (1=press enter, 0=don't press)\n- hover [element_id]: Hover over an element\n- scroll [up|down]: Scroll the page up or down\n- goto [url]: Navigate to specific URL\n- go_back: Go to previous page\n- go_forward: Go to next page\n- new_tab: Open new tab\n- close_tab: Close current tab\n- press [key]: Press keyboard key (e.g., Enter, Tab, Escape, ArrowDown, ArrowUp, Space)\n- clear [element_id]: Clear input field\n- send_msg(\"message\"): Send intermediate result or progress update to user (CONTINUE executing)\n- stop [answer]: Complete task and finish execution (FINAL answer)\n\nCRITICAL RULES:\n1. Element IDs MUST be in square brackets: [123], [search_box], etc.\n2. Actions MUST be wrapped in ``` ``` code blocks\n3. Only ONE action per response\n4. Use element_id when available, element_name only as fallback\n5. Always provide reasoning before the action\n6. No extra text after the code block\n7. Use send_msg(\"message\") for intermediate updates, stop [answer] only when task is COMPLETE\n8. After send_msg, you MUST continue executing the task - do NOT stop\n",
  "examples": [
    [
      "Welcome to the homepage. You can see a search bar and navigation menu. Search for a specific item.",
      "I need to search for an item, so I'll click on the search input field to begin the search process.\n\n```\nclick [search_input]\n```\n"
    ],
    [
      "You are on a category page with filtering and sorting controls. You need to find items with specific criteria.",
      "I need to apply filters and sorting to find the right items. I'll first use the filter controls, then apply sorting to organize the results.\n\n```\nclick [filter_control]\n```\n"
    ],
    [
      "You have found some relevant information but the task is not complete yet.",
      "I found some relevant information that might be useful to the user. I'll send this intermediate result and continue searching for the complete answer.\n\n```\nsend_msg(\"I found some relevant items. Let me continue searching for more specific information.\")\n```\n"
    ],
    [
      "You need to type text into a search box to find specific information.",
      "I need to enter search text into the input field. I'll type the search query and press Enter to submit.\n\n```\ntype [search_box] [search query] [1]\n```\n"
    ],
    [
      "The page is long and you need to see more content below.",
      "I need to scroll down to see more content on the page.\n\n```\nscroll [down]\n```\n"
    ],
    [
      "You need to navigate to a different website to complete the task.",
      "I need to navigate to the specified website to continue with the task.\n\n```\ngoto [https://example.com]\n```\n"
    ],
    [
      "You found a partial answer but need to verify or get more details.",
      "I found some information but need to verify it or get more details. I'll share this progress with the user and continue.\n\n```\nsend_msg(\"I found partial information: [details]. Let me verify this and get more complete details.\")\n```\n"
    ]
  ],
  
  "template": "Objective: {objective}\nURL: {url}\nObservation: {observation}\nPrevious Action: {previous_action}\n\n{discovery_context}\n\nFollow these rules:\n- Stay on the current website unless explicitly told to navigate elsewhere\n- Prefer element_id; only use element_name if id is missing\n- If filtering/sorting controls are present, use them before clicking items\n- If nothing relevant is visible, use scroll [down] once and reassess\n- Consider the action history and previous actions when planning your next move\n- Use your previous discoveries to guide your next actions\n- Continue taking actions until you have the complete answer\n\nIMPORTANT: For browsing and exploration tasks, you should use send_msg(\"message\") to report your findings as you discover them. These discoveries will be used in future steps to guide your exploration.\n\nThink step-by-step about what action to take next. Consider what you've already discovered and how it relates to your goal. Provide clear reasoning for your choice.\n\nIMPORTANT: This is a multi-step task. You must:\n1. Navigate to the correct category\n2. Find and sort the items\n3. Locate the specific item requested\n4. Find the answer (color, price, etc.)\n5. Use stop [answer] to complete the task\n\nCRITICAL: Use send_msg(\"message\") for intermediate updates and progress reports, especially when you find relevant information. NEVER stop after send_msg. You MUST continue executing the task.\n\nOUTPUT FORMAT (REQUIRED - NO VARIATIONS):\n\n[Your step-by-step reasoning here]\n\n```\n[action] [parameters]\n```\n\nExamples of correct format:\n```\nclick [123]\n```\n```\ntype [search_box] [search text] [1]\n```\n```\npress [ArrowDown]\n```\n```\nsend_msg(\"Progress update: [details]\")\n```\n```\nstop [The final answer is: [complete answer]]\n```\n\nCRITICAL: Output exactly ONE action in the format above. No extra text after the code block. After send_msg, continue executing - do NOT stop.",
  
  "meta_data": {
    "prompt_constructor": "CoTPromptConstructor",
    "task_name": "reward_guided_web_agent",
    "description": "Reward-guided Trajectory Search Agent for WebArena Lite",
    "answer_phrase": "```",
    "keywords": ["objective", "url", "observation", "previous_action"],
    "action_splitter": "```",
    "force_prefix": "The next action I will perform is:",
    "reward_prompt_template": "You are an expert evaluator of web agent actions. Your task is to assess how helpful the proposed next action is in making progress toward the user's goal, based on the current state of the webpage and the action history.\n\nUser's Goal: {objective}\n\nAction History:\n{action_history}\n\nCurrent Webpage State:\n{current_state}\n\nProposed Action: {proposed_action}\n\nEvaluate the helpfulness of this proposed action using the following scale:\n**Scoring Criteria (1 to 5):**\n- **5 (Very Helpful)**: The action directly and effectively moves toward fulfilling a key part of the goal.\n- **4 (Helpful)**: The action contributes meaningfully to progress, though it may require follow-up actions.\n- **3 (Somewhat Helpful)**: The action is partially relevant or a preparatory step, but doesn't make immediate progress.\n- **2 (Slightly Helpful)**: The action is weakly related to the goal or might only indirectly help.\n- **1 (Not Helpful)**: The action is unrelated, redundant, or distracts from the goal.\n\nPlease respond with only: Score: X\nWhere X is an integer from 1 to 5.",
    "refinement_context_template": "You are refining a web action based on feedback.\n\nGoal: {objective}\n\nCurrent State: {current_state}\n\nOriginal Action: {original_action}\n\nFeedback: {feedback}\n\nConstraints:\n- Stay on the current website unless explicitly told otherwise.\n- Prefer element_id over names.\n- Do not repeat previously low-scoring actions.\n- Return exactly one improved action in the same format, wrapped in code fences, and no extra text after.",
    "reward_score_regex": "Score:\\s*(\\d+)",
    "reject_threshold": 2.0
  },
  
  "num_samples": 10,
  "temperature": 0.7,
  "top_p": 0.9,
  "action_set_tag": "id_accessibility_tree",
  
  "policy_model": {
    "provider": "openai",
    "model": "gpt-4o-mini",
    "mode": "chat",
    "model_endpoint": null,
    "gen": {
      "temperature": 0.7,
      "top_p": 0.9,
      "context_length": 4096,
      "max_tokens": 512,
      "stop_token": "\\n\\n",
      "max_obs_length": 2048,
      "max_retry": 3
    }
  },
  
  "reward_model": {
    "provider": "openai",
    "model": "gpt-4o",
    "mode": "chat",
    "model_endpoint": null,
    "gen": {
      "temperature": 0.7,
      "top_p": 0.9,
      "context_length": 4096,
      "max_tokens": 512,
      "stop_token": null,
      "max_obs_length": 2048,
      "max_retry": 3
    }
  },
  
  "runtime": {
    "real_env": false,
    "render": false,
    "observation_type": "accessibility_tree",
    "viewport_width": 1280,
    "viewport_height": 2048,
    "sleep_after_execution": 1.0,
    "max_steps": 20,
    "planner_ip": "",
    "output_response": false,
    "log_level": "INFO"
  }
}
